<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+GitHub Page建立个人博客教程</title>
    <url>/2020/03/06/Hexo-GitHub-Page%E5%BB%BA%E7%AB%8B%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo博客文章，上传到GitHub的工具。  </p>
<ul>
<li>Windows：下载并安装<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Git</a></li>
<li>Linux (Ubuntu, Debian)：执行 <code>sudo apt-get install git-core</code></li>
<li>Linux (Fedora, Red Hat, CentOS)：执行 <code>sudo yum install git-core</code></li>
</ul>
<a id="more"></a><div class="note success">
            <p> <font size=5><strong>Windows 用户</strong></font><br>对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">淘宝 Git for Windows 镜像</a> 下载Git安装包</p>
          </div>




<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>Node.js 为大多数平台提供了官方的 <a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">安装程序</a>。对于中国大陆地区用户，可以前往 <a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝 Node.js 镜像</a> 下载。</p>
<div class="note primary">
            <p> <font size=5><strong>Windows 用户</strong></font><br>使用 Node.js 官方安装程序时，请确保勾选 <strong>Add to PATH</strong> 选项（默认已勾选）</p>
          </div>
<div class="note danger">
            <p> <font size=5><strong>For Mac / Linux 用户</strong></font><br>如果在尝试安装 Hexo 的过程中出现 <code>EACCES</code> 权限错误，请遵循 <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">由 npmjs 发布的指导</a> 修复该问题。强烈建议 <strong>不要</strong> 使用 root、sudo 等方法覆盖权限</p>
          </div>


<h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。<br>在控制台内执行<code>npm install -g hexo-cli</code><br>安装以后，可以使用以下两种方式执行 Hexo：<br>1.<code>npx hexo &lt;command&gt;</code><br>2.将 Hexo 所在的目录下的 <code>node_modules</code> 添加到环境变量之中即可直接使用 <code>hexo &lt;command&gt;</code>：</p>
<pre><code>echo &apos;PATH=&quot;$PATH:./node_modules/.bin&quot;&apos; &gt;&gt; ~/.profile</code></pre><br>

<p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件（&lt;folder&gt;为你要放博客的详细路径）</p>
<pre><code>hexo init &lt;folder&gt;
cd /d &lt;folder&gt;
npm install</code></pre><p>新建完成后，指定文件夹下有：</p>
<ul>
<li><code>node_modules</code>：依赖文件夹</li>
<li><code>public</code>：存放生成的静态文件</li>
<li><code>scaffolds</code>：模板</li>
<li><code>source</code>：存放文章、草稿及手动创建的页面</li>
<li><code>themes</code>：存放主题</li>
<li><code>_config.yml</code>：Hexo配置文件</li>
</ul>
<h1 id="GitHub-创建个人仓库"><a href="#GitHub-创建个人仓库" class="headerlink" title="GitHub 创建个人仓库"></a>GitHub 创建个人仓库</h1><p>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号 <a href="https://github.com/join" target="_blank" rel="noopener">点击注册</a>，点击GitHub中的New repository创建新仓库，仓库名应该为：<code>用户名</code>.github.io 这个<code>用户名</code>使用你的GitHub帐号名称代替，这是固定写法，比如我的仓库名称为 geniucker.github.io</p>
<h1 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h1><h2 id="设置user-name和user-email配置信息"><a href="#设置user-name和user-email配置信息" class="headerlink" title="设置user.name和user.email配置信息"></a>设置user.name和user.email配置信息</h2><p>在任意目录右键打开 Git Bash ，设置user.name和user.email配置信息：</p>
<pre><code>git config --global user.name &lt;user_name&gt;
git config --global user.email &lt;user_email&gt;</code></pre><p><code>&lt;user_name&gt;</code>和<code>&lt;user_email&gt;</code>分别为你的GitHub注册名和注册邮箱  </p>
<h2 id="生成-SSH-Key-并完成连接"><a href="#生成-SSH-Key-并完成连接" class="headerlink" title="生成 SSH Key 并完成连接"></a>生成 SSH Key 并完成连接</h2><p>首先检查本地是否有ssh key </p>
<pre><code>ls -al ~/.ssh</code></pre><p>如果终端输出的是：</p>
<pre><code>No such file or directory</code></pre><p>说明没有创建过SSH Key，创建SSH Key：</p>
<pre><code>ssh-keygen -t rsa -C &lt;你的邮箱&gt;</code></pre><p>替换上自己的邮箱，接着都按<kbd>Enter</kbd>确认即可<br>接着打开用户名目录下的.ssh文件夹（若是不清楚什么事用户目录可以把 <code>%USERPROFILE%\.ssh</code> 复制到计算机的地址栏里）中的id_rsa.pub中的内容全部复制（可用记事本等打开）  </p>
<p>打开并登录GitHub，进入设置（点击角的头像，进入Settings），点击 <code>SSH and GPG keys</code> ，点击 <code>New SSH key</code> ，把刚才复制的内容粘贴到 Key 的文本框内，Title 随便填，点击 <code>Add SSH key</code> 完成添加。<br>会到 Git Bash，输入 <code>ssh git@github.com</code> <kbd>Enter</kbd>，若得到</p>
<pre><code>The authenticity of host &apos;github.com (13.250.177.223)&apos; can&apos;t be established.
RSA key fingerprint is   SHA256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.
Are you sure you want to continue connecting (yes/no)? </code></pre><p>输入yes，<kbd>Enter</kbd></p>
<pre><code>Warning: Permanently added &apos;github.com,13.250.177.223&apos; (RSA) to the list of known hosts.
Hi &lt;user_name&gt;! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</code></pre><p>连接成功</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>可以在 <code>_config.yml</code> 中修改大部分的配置，这里只列举常用的</p>
<h2 id="网站"><a href="#网站" class="headerlink" title="网站"></a>网站</h2><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>title</code></td>
<td>网站标题</td>
</tr>
<tr>
<td><code>subtitle</code></td>
<td>网站副标题</td>
</tr>
<tr>
<td><code>description</code></td>
<td>网站描述（主要用于SEO，告诉搜索引擎一个关于您站点的简单描述，通常建议在其中包含您网站的关键词）</td>
</tr>
<tr>
<td><code>keywords</code></td>
<td>网站的关键词。使用半角逗号 <code>,</code> 分隔多个关键词。</td>
</tr>
<tr>
<td><code>author</code></td>
<td>您的名字（用于主题显示文章的作者）</td>
</tr>
<tr>
<td><code>language</code></td>
<td>网站使用的语言</td>
</tr>
<tr>
<td><code>timezone</code></td>
<td>网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td>
</tr>
</tbody></table>
<h2 id="网址"><a href="#网址" class="headerlink" title="网址"></a>网址</h2><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td><code>url</code></td>
<td>网址</td>
<td></td>
</tr>
<tr>
<td><code>root</code></td>
<td>网站根目录</td>
<td></td>
</tr>
<tr>
<td><code>permalink</code></td>
<td>文章的 <a href="https://hexo.io/zh-cn/docs/permalinks" target="_blank" rel="noopener">永久链接</a> 格式</td>
<td><code>:year/:month/:day/:title/</code></td>
</tr>
<tr>
<td><code>pretty_urls.trailing_index</code></td>
<td>是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td>
<td><code>true</code></td>
</tr>
<tr>
<td><code>pretty_urls.trailing_html</code></td>
<td>是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td>
<td><code>true</code></td>
</tr>
</tbody></table>
<div class="note info">
            <p> <font size=5><strong>网站存放在子目录</strong></font><br>如果您的网站存放在子目录中，例如 <code>http://yoursite.com/blog</code>，则请将您的 <code>url</code> 设为 <code>http://yoursite.com/blog</code> 并把 <code>root</code> 设为 <code>/blog/</code></p>
          </div>

<pre><code># 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html
pretty_urls:
  trailing_index: false
# 此时页面的永久链接会变为 http://example.com/foo/bar/</code></pre><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td><code>per_page</code></td>
<td>每页显示的文章量 (0 = 关闭分页功能)</td>
<td><code>10</code></td>
</tr>
</tbody></table>
<h2 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h2><table>
<thead>
<tr>
<th>参数</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td><code>theme</code></td>
<td>当前主题名称。值为<code>false</code>时禁用主题</td>
</tr>
<tr>
<td><code>deploy</code></td>
<td>部署部分的设置</td>
</tr>
</tbody></table>
<blockquote>
<p>由于使用 GitHub Page，<code>deploy</code>部分改为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line"> type: git</span><br><span class="line"> repository: git@github.com:&lt;username&gt;&#x2F;&lt;username&gt;.github.io.git</span><br><span class="line"> branch: master</span><br></pre></td></tr></table></figure>
<p><username>替换为GitHub用户名</p>
</blockquote>
<h1 id="安装-git-deploy-插件"><a href="#安装-git-deploy-插件" class="headerlink" title="安装 git-deploy 插件"></a>安装 git-deploy 插件</h1><p>因为要通过 Git 将Hexo部署到GitHub，所以要用到 git-deploy</p>
<pre><code>cd &lt;folder&gt;
npm install hexo-deployer-git --save</code></pre><p>&lt;folder&gt;为Hexo所在文件夹的详细目录</p>
<h1 id="调试-Hexo"><a href="#调试-Hexo" class="headerlink" title="调试 Hexo"></a>调试 Hexo</h1><div class="note danger">
            <p>执行任何 Hexo 的命令都要cd到博客所在文件夹，为了避免麻烦，我的做法是在博客根目录下建立一个bat文件，内容改为cmd，要执行命令只要打开它而不用cd <folder></p>
          </div>
<p><code>hexo server</code> 或 <code>hexo s</code>  在本地运行网站，当得到</p>
<pre><code>INFO  Start processing
INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></pre><p>可在浏览器打开localhost:4000访问你的博客，用完只要按<kbd>Ctrl</kbd>+<kbd>C</kbd>或直接关闭控制台窗口<br><br></p>
<p><code>hexo clean</code> 清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。<br><br></p>
<p><code>hexo generate</code> 或 <code>hexo g</code> 生成静态文件，后面可跟<code>-d</code>、<code>-f</code> 等参数<br>如： </p>
<blockquote>
<p><code>hexo g -f</code>强制重新生成静态文件，效果相当于<code>hexo clean</code> &amp;&amp; <code>hexo g</code><br><code>hexo g -d</code>生成静态文件后立即部署网站，效果相当于<code>hexo clean</code> &amp;&amp; <code>hexo g</code></p>
</blockquote>
<br>

<p><code>hexo deploy</code> 或 <code>hexo d</code> 部署网站，可跟参数 <code>-g</code>部署之前先生成静态文件</p>
<h1 id="绑定个人域名"><a href="#绑定个人域名" class="headerlink" title="绑定个人域名"></a>绑定个人域名</h1><p>1.为域名设置指向 &lt;yourname&gt;.github.io 的记录<br><img data-src="https://i.loli.net/2020/03/06/PN6DxtE5elfSkBy.jpg" alt="picture"> <img data-src="https://i.loli.net/2020/03/06/iUAz62XV4SBrKmI.jpg" alt="picture"><br>2.在网站根目录的source文件夹中建立文件<code>CNAME</code>（全大写，无拓展名），文件的内容为你要绑定域名（不是&lt;yourname&gt;.github.io）<br>3.打开项目的设置页 github.com/&lt;yourname&gt;/&lt;\yourname&gt;.github.io/settings（&lt;yourname&gt;换乘GitHub用户名）定位到下图所示处： <img data-src="https://i.loli.net/2020/03/06/WSEFZowDx182Itr.jpg" alt="picture">在Custom domain的编辑框内填上要绑定的域名<br>建议在 “Enforce HTTPS” 前的复选框上打勾，若无法打勾可能正在申请证书，过一段时间再试<br>4.正常部署网站，即可通过自己域名访问博客<br><strong>P.S.域名解析生效可能需要一定时间，不一定马上就能通过自己的域名访问</strong></p>
<h1 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h1><p>其它详细信息详见 <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">官方文档</a></p>
]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>更新，嗯~</title>
    <url>/2020/02/27/%E6%9B%B4%E6%96%B0%EF%BC%8C%E5%97%AF/</url>
    <content><![CDATA[<hr>
<p>今天增加了评论系统（Valine）以及留言（还是Valine）<br>/手动滑稽<img data-src="https://i.loli.net/2020/02/28/Ou52anJFWkiqx9V.png" alt="">就是一直搞不懂图片和文字为什么不能在同一行显示  </p>
<p>本段代码（Markdown）：</p>
<a id="more"></a>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">今天增加了评论系统（Valine）以及留言（还是Valine）  </span><br><span class="line">/手动滑稽![](https://i.loli.net/2020/02/28/Ou52anJFWkiqx9V.png)就是一直搞不懂图片和文字为什么不能在同一行显示</span><br></pre></td></tr></table></figure>
<p><strong>欢迎指导</strong></p>
]]></content>
      <categories>
        <category>博文</category>
      </categories>
      <tags>
        <tag>建站日志</tag>
      </tags>
  </entry>
  <entry>
    <title>终于搭好博客了</title>
    <url>/2020/02/26/%E7%BB%88%E4%BA%8E%E6%90%AD%E5%A5%BD%E5%8D%9A%E5%AE%A2%E4%BA%86/</url>
    <content><![CDATA[<p>小白一枚，由于什么都不会，所以搞了好几天才搞好hexo和next主题，终于弄好了！</p>
<a id="more"></a>]]></content>
      <categories>
        <category>博文</category>
      </categories>
      <tags>
        <tag>建站日志</tag>
      </tags>
  </entry>
</search>
